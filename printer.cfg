# Rat Rig V-core 3 Klipper Config

# You'll be able to print just fine with this config as it is, but it is recommended
# that you follow these steps to properly calibrate your printer:
# 0) Sanity check and PID Tuning: https://www.klipper3d.org/Config_checks.html
# 1) Pressure Advance: https://www.klipper3d.org/Pressure_Advance.html
# 2) Skew Correction: https://www.klipper3d.org/skew_correction.html
# 3) Resonance Compensation: https://www.klipper3d.org/Resonance_Compensation.html

# Read more about klipper here: https://www.klipper3d.org/Overview.html

### BASE SETUP

# Uncomment this next line if you have an ADXL345 connected to the SKR PRO
#[include v-core-3/adxl345.cfg] 

# This file contains common pin mappings for the BigTreeTech GTR.

# Has been modified with settings for RAT RIG V-CORE 3 500 with bltouch,sensorless homing and pt1000 thermister,
# Motors connected in this order X,Y,Z,EXTRUDER,Z1,Z2. Z1 AND Z2 BEING IN E1 AND E2 ON THE BOARD
# X&Y WIRING LEFT TO RIGHT BL,R,G,B ALL OTHERS FLIPPED B,G,R,BL
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# The "make flash" command does not work on the GTR. Instead,
# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the GTR
# with that SD card.
# if the above does not work the firmware.bin on Rat Rig github will work
# you may also have to run ls /dev/serial/by-id/* using putty and copy the results and enter for serial
# under section [mcu]
# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC15
dir_pin: PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PF2
position_endstop: 0
position_max: 500
homing_speed: 50

[stepper_y]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PC13
position_endstop: 0
position_max: 500
homing_speed: 50
homing_positive_dir: True

[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PB9
microsteps: 16
rotation_distance: 4
#endstop_pin: ^PE0
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_max: 500
homing_speed: 12
second_homing_speed: 1



# BEWARE, this doesn't work if you've bent the DIAG pins on your x / y steppers.

[stepper_x]
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: -12
position_endstop: -12

[stepper_y]
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: -12
position_endstop: -5

[tmc2209 stepper_x]
diag_pin: PF2
driver_SGTHRS: 40# Stall guard threshold, this is your X sensitivity, to adjust, copy this section and override it in printer.cfg.

[tmc2209 stepper_y]
diag_pin: PC13
driver_SGTHRS: 40 # Stall guard threshold, this is your Y sensitivity, to adjust, copy this section and override it in printer.cfg.


[stepper_z1]
step_pin: PD6
dir_pin: PD5
enable_pin: !PD7
rotation_distance: 4
microsteps: 16


[stepper_z2]
step_pin: PD1
dir_pin: PD0
enable_pin: !PD2
rotation_distance: 4
microsteps: 16



#[safe_z_home]
#home_xy_position: 250,250 # Change coordinates to the center of your print bed
#speed: 50
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 5

[homing_override]
set_position_z: 5
gcode:
    M400                  # Wait for moves to finish
    G90                   # Absolute positioning
    G0 Z10 F600           # Hop Z-Axis
    M204 S1000            # Set homing acceleration (important!)###

     Home Y
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT=0.4 HOLDCURRENT=0.4
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT=0.4 HOLDCURRENT=0.4
    G28 Y
    G0 Y{printer.toolhead.axis_maximum.y / 2} F9000

     Home X
   SET_TMC_CURRENT STEPPER=stepper_x CURRENT=0.5 HOLDCURRENT=0.5
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT=0.5 HOLDCURRENT=0.5
    G28 X

    G0 X{printer.toolhead.axis_maximum.x / 2} F9000
 
     Restore current
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.config["tmc2209 stepper_x"].run_current} HOLDCURRENT={printer.configfile.config["tmc2209 stepper_x"].hold_current}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.config["tmc2209 stepper_y"].run_current} HOLDCURRENT={printer.configfile.config["tmc2209 stepper_y"].hold_current}

	G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y / 2} F3000
	
     Rehome Z
    G28 Z
    
     Safe Z
    G0 Z10 F600

[extruder]
step_pin: PG12
dir_pin: PG11
enable_pin: !PG13
rotation_distance: 4.63
microsteps: 16
full_steps_per_rotation: 200
filament_diameter: 1.750
max_extrude_only_velocity: 60
heater_pin: PB1 # Heat0
sensor_pin:  PC1 # T0 Header
sensor_type: PT1000
#control: pid
#pid_Kp: 28.413
#pid_Ki: 1.334
#pid_Kd: 151.3
min_temp: 0
max_temp: 400
nozzle_diameter: 0.400
max_extrude_cross_section: 0.64
max_extrude_only_distance: 200

[adc_temperature PT1000]
temperature1: 0
resistance1: 1000
temperature2: 100
resistance2: 1385.10
temperature3: 200
resistance3: 1758.60






[heater_bed]
heater_pin: PA2
sensor_pin: PC0 # BED
sensor_type: ATC Semitec 104GT-2
#control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: PE5 # FAN0

[heater_fan fan1]
pin: PE6 # FAN1

[heater_fan fan2]
pin: PC8 # FAN2


[bed_mesh]
speed: 180
horizontal_move_z: 5
mesh_min: 20,20
mesh_max:465,460
probe_count: 7,7
fade_start: 1.0
fade_end: 10.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: .2

[z_tilt]
z_positions:
	0,0
	250,500
	500,0

points:
	60,60
	285,470
	460,60

speed: 180
horizontal_move_z: 12
retries: 10
retry_tolerance: 0.02



[bltouch]
sensor_pin: ^PH11
control_pin: PB11
speed: 7
pin_move_time: 0.675
sample_retract_dist: 10

#pin_up_reports_not_triggered: True
#pin_up_touch_mode_reports_triggered: True
x_offset: -28
y_offset: -13
#z_offset: 10







[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

#[temperature_sensor k_therm]
#sensor_type: MAX31855
#sensor_pin: PH9
#spi_bus: spi2b



[mcu]
restart_method: command
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_4E0029000151373333383735-if00
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
# setup for PA9, PA10 USART1_tx / rx directly connected to the RPI GPIO TX / RX pins
# These are the pins the GTR uses for its built in RPI 40 pin connector
# only connect GND, TX, RX - supply 5v power to the RPI separately
# do not cross over TX/RX - it is done internally on the GTR PCB.
# Use "sudo raspi-config" to disable the serial terminal - but enable the serial port.
# When running "make menuconfig" you must un-select the USB Serial check box

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 1500
max_accel_to_decel: 750
max_z_velocity: 15
max_z_accel: 20


[temperature_sensor raspberry_pi]
sensor_type: rpi_temperature

[skew_correction]

[input_shaper]

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[include client_macros.cfg]






########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC14
run_current: 1.1
hold_current: 0.500
stealthchop_threshold: 900

[tmc2209 stepper_y]
uart_pin: PE1
run_current: 1.1
hold_current: 0.500
stealthchop_threshold: 900

[tmc2209 stepper_z]
uart_pin: PB5
run_current: 1.1
hold_current: 0.500
stealthchop_threshold: 99999

[tmc2209 extruder]
uart_pin: PG10
run_current: 0.5
hold_current: 0.4
stealthchop_threshold: 900

[tmc2209 stepper_z1]
uart_pin: PD4
run_current: 1.1
hold_current: 0.500
stealthchop_threshold: 99999

[tmc2209 stepper_z2]
uart_pin: PC12
run_current: 1.1
hold_current: 0.500
stealthchop_threshold: 99999


########################################
# TMC2130 configuration
########################################

#[tmc2130 stepper_x]
#cs_pin: PC14
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc2130 stepper_y]
#cs_pin: PE1
#sense_resistor: 0.075
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc2130 stepper_z]
#cs_pin: PB5
#sense_resistor: 0.075
#run_current: 0.650
#hold_current: 0.450
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc2130 extruder]
#cs_pin: PG10
#sense_resistor: 0.075
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc2130 extruder1]
#cs_pin: PD4
#sense_resistor: 0.075
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc2130 extruder2]
#cs_pin: PC12
#sense_resistor: 0.075
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

########################################
# TMC5160 configuration
########################################

#[tmc5160 stepper_x]
#cs_pin: PC14
#sense_resistor: 0.075
#interpolate: True
#run_current: 1
#hold_current: 1
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc5160 stepper_y]
#cs_pin: PE1
#sense_resistor: 0.075
#interpolate: True
#run_current: 1
#hold_current: 1
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc5160 stepper_z]
#cs_pin: PB5
#sense_resistor: 0.075
#interpolate: True
#run_current: 0.4
#hold_current: 0.4
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc5160 extruder]
#cs_pin: PG10
#sense_resistor: 0.075
#interpolate: True
#run_current: 0.5
#hold_current: 0.5
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc5160 extruder1]
#cs_pin: PD4
#sense_resistor: 0.075
#interpolate: True
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

#[tmc5160 extruder2]
#cs_pin: PC12
#sense_resistor: 0.075
#interpolate: True
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 0
#spi_software_mosi_pin: PG15
#spi_software_miso_pin: PB6
#spi_software_sclk_pin: PB3

########################################
# EXP1 / EXP2 (display) pins
########################################

# display section not tested - pinout should be correct but my LCD did not work yet

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC11, EXP1_3=PC10, EXP1_5=PG8, EXP1_7=PG6, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=PA8, EXP1_6=PG7, EXP1_8=PG5, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PD10, EXP2_5=PH10, EXP2_7=PB10,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB12, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>
    # not sure on this: Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi2"

# See the sample-lcd.cfg file for definitions of common LCD displays.

#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8

#[output_pin beeper]
#pin: EXP1_1

# Print macros. Call these from your slicer (custom g-code). 
# You can Modify these to your liking.
# Prusa Slicer Example:
# START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# M190 S[first_layer_bed_temperature] ; Prevents prusaslicer from prepending this to the gcode.
# M109 S[first_layer_temperature] ; Prevents prusaslicer from prepending this to the gcode.
[gcode_macro START_PRINT]
gcode:
  SAVE_GCODE_STATE NAME=start_print_state
  G21 ;metric values
  G90 ;absolute positioning
  M82 ;set extruder to absolute mode
  G28 ;home
  M117 Heating...
  M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }; wait for bed to heat up
  M109 S150 ; Wait for extruder to reach 150 so an inductive probe (if present) is at a predictable temp. Also allows the bed heat to spread a little.
  Z_TILT_ADJUST ;Adjust bed tilt
  G28 Z ;Home again as Z will have changed after tilt adjustment and bed heating.
  BED_MESH_CALIBRATE ; Calibrate bed mesh
  G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y} Z50 F6000 ; Park in the back and wait for extruder
  M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }; wait for extruder to heat up
  M117 Printing...
  RESTORE_GCODE_STATE NAME=start_print_state

# The end_print macro is also called from CANCEL_PRINT.
[gcode_macro END_PRINT]
gcode:
  SAVE_GCODE_STATE NAME=end_print_state
  M104 S0 ;extruder heater off
  M140 S0 ;heated bed heater off
  G91 ;relative positioning
  G1 Z10 E-2 F3600  ;retract the filament a bit before lifting the nozzle.
  G1 E-2 F3600 ;retract filament even more
  G90 ;absolute positioning
  G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y} ; Park in the back
  M84 ;steppers off
  M107 ; part cooling fan off
  M117 Done.
  RESTORE_GCODE_STATE NAME=end_print_state

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_Z: 10  
default_parameter_E: 0.6
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 0.6
gcode:
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    END_PRINT
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.414
#*# pid_ki = 0.864
#*# pid_kd = 145.411
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 64.322
#*# pid_ki = 2.293
#*# pid_kd = 451.061
#*#
#*# [bltouch]
#*# z_offset = 3.100
